Description: Account Builder Template.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Parameters for the new created account
        Parameters:
          - AccountEmail
          - AccountName
          - LambdaSourceBucket

Parameters:
  AccountName:
   Description: "Account Name"
   Type: String
   AllowedPattern: ".+"
   ConstraintDescription: "Account Name"

  AccountEmail:
   Description: "Account Email address"
   Type: String
   AllowedPattern: ".+"
   ConstraintDescription: "Must provide a valid email address"

  LambdaSourceBucket:
    Description: "Bucket holding the baseline template file"
    Type: String
    Default: unsw-idcm-account-factory

Resources:
  AccountBuilderLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: "AccountCreationLambda.main"
      FunctionName: !Sub AccountFactory-${AccountName}
      Runtime: "python3.6"
      Role: !GetAtt LambdaExecuteRole.Arn
      Timeout: 600
      TracingConfig:
          Mode: "Active"
      Code:
        S3Bucket: !Ref LambdaSourceBucket
        S3Key: "AccountCreationLambda.zip"
      Environment:
        Variables:
          'AccountEmail' : !Ref AccountEmail
          'AccountName' : !Ref AccountName
          'LambdaSourceBucket' : !Ref LambdaSourceBucket

  LambdaExecuteRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
            Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
      - PolicyName: LambdaAccessRole
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Effect: Allow
            Action: "*"
            Resource: "*"

  TriggerLambda:
    Type: "Custom::TriggerLambda"
    DeletionPolicy: Retain
    DependsOn:
    - AccountBuilderLambda
    - LambdaExecuteRole
    Properties:
      ServiceToken: !GetAtt AccountBuilderLambda.Arn

Outputs:
  Message:
    Description: Execution Status
    Value: !GetAtt 'TriggerLambda.Message'

  AccountID:
    Description: ID of the new account
    Value: !GetAtt 'TriggerLambda.AccountID'

  AccountRole:
    Description: The role created in the new account (use for switch role)
    Value: !GetAtt 'TriggerLambda.AccountRole'

  LoginURL:
    Description: Login url
    Value: !GetAtt 'TriggerLambda.LoginURL'

